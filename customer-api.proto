syntax = "proto3";

package customer_api;

option go_package = "./pb";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message Context {
  string domain_id = 1;
  string access_token = 2;
  map<string,string> meta = 3;
}

message StringRequest {
  Context ctx = 1;
  string value = 2;
}

message StringResponse {

}

message MessageResponse {
  bool ok = 1;
}

message Tenant {
  string tenant_id = 1;
  string domain = 2;
  string name = 3;
  int32 created_time = 4;
  int32 updated_time = 5;
  map<string,string> meta = 6;
  string customer_id = 7;
}

message ListTenantResponse {
  repeated Tenant data = 1;
  int32 total = 2;
}

message TenantResponse {
  Tenant data = 1;
}

message TenantRequest {
  Context ctx = 1;
  Tenant data = 2;
}

message UpdateTenantRequest {
  Context ctx = 1;
  Tenant data = 2;
  string value = 3;
}

message ListRequest {
  enum OrderType {
      ASC = 0;
      DESC = 1;
  }
  message Filter {
      string key = 1;
      string value = 2;
      string operator = 3;
  }

  Context ctx = 1;
  int32 offset = 2;
  int32 limit = 3;
  string search = 4;
  map<string,OrderType> orders = 5;
  repeated Filter filters = 6;
  map<string,string> extra_params = 7;
  string request_payload = 8;
}

service CustomerService {
  rpc Create(TenantRequest) returns (TenantResponse) {
    option (google.api.http) = {
			post: "/v1/customer-api/{ctx.domain_id}/tenants"
		   	body: "*"
		};
  }
  rpc GetById(StringRequest) returns (TenantResponse) {
    option (google.api.http) = {
			get: "/v1/customer-api/{ctx.domain_id}/tenants/{value}"
		};
  }
  rpc GetByDomain(StringRequest) returns (TenantResponse) {
    option (google.api.http) = {
			post: "/v1/customer-api/{ctx.domain_id}/tenants/get_by_domain/{value}"
		   	body: "*"
		};
  }
  rpc GetAll(ListRequest) returns (ListTenantResponse) {
    option (google.api.http) = {
			get: "/v1/customer-api/{ctx.domain_id}/tenants/@all/get_all"
		};
  }
  rpc Update(UpdateTenantRequest) returns (TenantResponse) {
    option (google.api.http) = {
			put: "/v1/customer-api/{ctx.domain_id}/tenants/{value}"
		   	body: "*"
		};
  }
  rpc DeleteById(StringRequest) returns (StringResponse) {
    option (google.api.http) = {
			delete: "/v1/customer-api/{ctx.domain_id}/tenants/{value}"
		};
  }
}