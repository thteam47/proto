syntax = "proto3";

package identity_authen_api;

option go_package = "./pb";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message Context {
  string domain_id = 1;
  string access_token = 2;
}

message Permission {
  string privilege = 1;
  repeated string actions = 2;
}

message User {
  string user_id = 1;
  string full_name = 2;
  string email = 3;
  string username = 4;
  bool permission_all = 5;
  repeated string role = 6;
  repeated Permission permissions = 7;
  string status = 8;
  int32 created_time = 9;
  int32 updated_time = 10;
  string domain_id = 11;
  map<string,string> meta = 12;
  string type = 13;
  string user_type = 14;
}

message StringRequest {
  Context ctx = 1;
  string value = 2;
}

message Request {
  Context ctx = 1;
}

message StringResponse {

}

message MessageResponse {
  bool ok = 1;
  string message = 2;
}

message LoginRequest {
  Context ctx = 1;
  string type = 2;
  string username = 3;
  string password = 4;
  int32 otp = 5;
  string request_id = 6;
  string type_mfa = 7;
  string user_type = 8;
  string domain = 9;
} 

message LoginResponse {
  string token = 1;
  int32 error_code = 2;
  string message = 3;
}

message PrepareLoginRequest {
  Context ctx = 1;
}

message PrepareLoginResponse {
  string token = 1;
  int32 error_code = 2;
  string message = 3;
  string request_id = 4;
  string type_mfa = 5;
  repeated string available_mfas = 6;
  string secret = 7;
  string url = 8;
}

message ForgotPasswordRequest {
  Context ctx = 1;
  string data = 2;
}

message UpdatePasswordRequest {
  Context ctx = 1;
  string user_id = 2;
  string password = 3;
}

message UpdateMfaRequest {
  Context ctx = 1;
  string user_id = 2;
  repeated Mfa mfas = 3;
}

message UserRegisterRequest {
  Context ctx = 1;
  string full_name = 2;
  string email = 3;
  string username = 4;
  string password = 5;
}

message RegisteResponse {
  string token = 1;
  int32 error_code = 2;
  string message = 3;
}

message AuthenInfo {
  string user_id = 1;
  string hash_password = 2;
  repeated Mfa mfas = 3;
  int32 create_time = 4;
  int32 update_time = 5;
}

message Mfa {
  string type = 1;
  bool enabled = 2;
  string secret = 3;
  string public_data = 4;
  bool configured = 5;
  string url = 6;
}

message MfaResponse {
  repeated Mfa mfas = 1;
}

service IdentityAuthenService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
			post: "/v1/identity-authen-api/{ctx.domain_id}/login"
		   	body: "*"
		};
  }
  rpc Logout(Request) returns (MessageResponse) {
    option (google.api.http) = {
			get: "/v1/identity-authen-api/{ctx.domain_id}/logout"
		};
  }
  rpc PrepareLogin(PrepareLoginRequest) returns (PrepareLoginResponse) {
    option (google.api.http) = {
			post: "/v1/identity-authen-api/{ctx.domain_id}/prepare_login"
		   	body: "*"
		};
  }
  rpc ForgotPassword(ForgotPasswordRequest) returns (MessageResponse) {
    option (google.api.http) = {
			post: "/v1/identity-authen-api/{ctx.domain_id}/forgot_password"
		   	body: "*"
		};
  }
  rpc UpdateForgotPassword(UpdatePasswordRequest) returns (MessageResponse) {
    option (google.api.http) = {
			post: "/v1/identity-authen-api/{ctx.domain_id}/forgot_password/update"
		   	body: "*"
		};
  }
  rpc UpdatePassword(UpdatePasswordRequest) returns (MessageResponse) {
    option (google.api.http) = {
			put: "/v1/identity-authen-api/{ctx.domain_id}/update_password/{user_id}"
		   	body: "*"
		};
  }
  rpc UpdateMfa(UpdateMfaRequest) returns (MessageResponse) {
    option (google.api.http) = {
			put: "/v1/identity-authen-api/{ctx.domain_id}/update_mfa/{user_id}"
		   	body: "*"
		};
  }
  rpc GetMfaType(StringRequest) returns (MfaResponse) {
    option (google.api.http) = {
			get: "/v1/identity-authen-api/{ctx.domain_id}/get_mfa/{value}"
		};
  }
  rpc RegisterUser(UserRegisterRequest) returns (RegisteResponse) {
    option (google.api.http) = {
			post: "/v1/identity-authen-api/{ctx.domain_id}/registers"
		   	body: "*"
		};
  }

  rpc RequestVerifyEmail(StringRequest) returns (MessageResponse) {
    option (google.api.http) = {
			post: "/v1/identity-authen-api/{ctx.domain_id}/request_verify_email"
		   	body: "*"
		};
  }

  rpc VerifyUser(Request) returns (MessageResponse) {
    option (google.api.http) = {
			get: "/v1/identity-authen-api/{ctx.domain_id}/verify-user"
		};
  }
  rpc VerifyForgotPassword(Request) returns (MessageResponse) {
    option (google.api.http) = {
			get: "/v1/identity-authen-api/{ctx.domain_id}/verify-forgot-password"
		};
  }
  
}